
task jacocoTestReport(type: JacocoReport) {
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")
    group = "Reporting"
    subprojects.each {
        sourceSets it.sourceSets.main
    }

    reports {
        xml.enabled true
        html.enabled true
        csv.enabled false
    }
}

task getCoverage(type: Exec, dependsOn: 'codeCoverageReport') {
    group = "Reporting"
    commandLine "open", "$buildDir/reports/jacoco/codeCoverageReport/html/index.html"
}

def androidExclusion = [
        '**/databinding/**/*.*',
        '**/android/databinding/*Binding.*',
        '**/BR.*',
        '**/R.*',
        '**/R$*.*',
        '**/BuildConfig.*',
        '**/Manifest*.*',
        '**/*_MembersInjector.*',
        '**/Dagger*Component.*',
        '**/Dagger*Component$Builder.*',
        '**/*Module_*Factory.*',
        '**/*Adapter*.*',
        '**/*ViewPager*.*',
        '**/*Module*.*'
]

sonarqube {
    properties {
        property "sonar.host.url", "http://localhost:9000/"
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.projectKey", "newsApp"
        property "sonar.projectName", "newsApp"
        property "sonar.password", "admin"
        property "sonar.projectVersion", "V1.0"
        property "sonar.sources", "src/main/java"
        property "sonar.tests", ["src/test/java"]
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.coverage.exclusions", "${androidExclusion.join(',')}"
        property "sonar.jacoco.reportPaths", "${project.buildDir}/jacoco/testStagingDebugUnitTest.exec"
        property "sonar.junit.reportsPath", "${project.buildDir}/test-results/testStagingDebugUnitTest"
    }
}
